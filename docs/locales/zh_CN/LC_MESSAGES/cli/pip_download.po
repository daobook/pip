# SOME DESCRIPTIVE TITLE.
# Copyright (C) The pip developers
# This file is distributed under the same license as the pip package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pip 22.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-05 09:32+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../html/cli/pip_download.rst:6
msgid "pip download"
msgstr ""

#: ../../html/cli/pip_download.rst:10
msgid "Usage"
msgstr ""

#: ../../html/cli/pip_download.rst:22
msgid "Description"
msgstr ""

#: ../../html/cli/pip_download.rst:27
msgid "Overview"
msgstr ""

#: ../../html/cli/pip_download.rst:29
msgid ""
"``pip download`` does the same resolution and downloading as ``pip "
"install``, but instead of installing the dependencies, it collects the "
"downloaded distributions into the directory provided (defaulting to the "
"current directory). This directory can later be passed as the value to "
"``pip install --find-links`` to facilitate offline or locked down package"
" installation."
msgstr ""

#: ../../html/cli/pip_download.rst:35
msgid ""
"``pip download`` with the ``--platform``, ``--python-version``, "
"``--implementation``, and ``--abi`` options provides the ability to fetch"
" dependencies for an interpreter and system other than the ones that pip "
"is running on. ``--only-binary=:all:`` or ``--no-deps`` is required when "
"using any of these options. It is important to note that these options "
"all default to the current system/interpreter, and not to the most "
"restrictive constraints (e.g. platform any, abi none, etc). To avoid "
"fetching dependencies that happen to match the constraint of the current "
"interpreter (but not your target one), it is recommended to specify all "
"of these options if you are specifying one of them. Generic dependencies "
"(e.g. universal wheels, or dependencies with no platform, abi, or "
"implementation constraints) will still match an over- constrained "
"download requirement."
msgstr ""

#: ../../html/cli/pip_download.rst:51
msgid "Options"
msgstr ""

#: ../../html/cli/pip_download.rst:59
msgid "Examples"
msgstr ""

#: ../../html/cli/pip_download.rst:61
msgid "Download a package and all of its dependencies"
msgstr ""

#: ../../html/cli/pip_download.rst:80
msgid ""
"Download a package and all of its dependencies with OSX specific "
"interpreter constraints. This forces OSX 10.10 or lower compatibility. "
"Since OSX deps are forward compatible, this will also match ``macosx-"
"10_9_x86_64``, ``macosx-10_8_x86_64``, ``macosx-10_8_intel``, etc. It "
"will also match deps with platform ``any``. Also force the interpreter "
"version to ``27`` (or more generic, i.e. ``2``) and implementation to "
"``cp`` (or more generic, i.e. ``py``)."
msgstr ""

#: ../../html/cli/pip_download.rst:109
msgid ""
"Download a package and its dependencies with linux specific constraints. "
"Force the interpreter to be any minor version of py3k, and only accept "
"``cp34m`` or ``none`` as the abi."
msgstr ""

#: ../../html/cli/pip_download.rst:137
msgid "Force platform, implementation, and abi agnostic deps."
msgstr ""

#: ../../html/cli/pip_download.rst:163
msgid ""
"Even when overconstrained, this will still correctly fetch the pip "
"universal wheel."
msgstr ""

#: ../../html/cli/pip_download.rst:202
msgid "Download a package supporting one of several ABIs and platforms."
msgstr ""

#: ../../html/cli/pip_download.rst:200
msgid ""
"This is useful when fetching wheels for a well-defined interpreter, whose"
" supported ABIs and platforms are known and fixed, different than the one"
" pip is running under."
msgstr ""

